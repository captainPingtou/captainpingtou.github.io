(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{205:function(t,s,n){"use strict";n.r(s);var a=n(0),p=Object(a.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("p",[t._v("相信同学在看官方题解里面的数学方法里面时，会看到这样的式子：")]),t._v(" "),n("p",[t._v("$$\n\\sqrt{2 C+\\frac{1}{4}}-\\frac{3}{2}<p \\leq \\sqrt{2 C+\\frac{1}{4}}-\\frac{1}{2}\n$$")]),t._v(" "),n("p",[t._v("或者是这个代码：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" candies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.25")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("“我擦，这是什么鬼？？？”\n“咦！这玩意到底咋来的？”")]),t._v(" "),n("p",[t._v("我猜不少同学内心会这样想，我第一次看见数学解法的代码时也是一脸懵逼的。本帖会详细讲解我是怎么理解这个数学方法的，以及数学方法里面的每一步是怎么得到的，希望能帮助大家顺利理解。这里首先过一遍普通方法，这会帮大家加深对题目各个要素的记忆。")]),t._v(" "),n("ol",[n("li",[t._v("普通方法\n思想：对小朋友们进行遍历，每次都发小朋友们应得数量的糖，直到剩下的糖不足以分发应得数量，就直接给最后那位倒霉孩子\n代码实现时，有一些细节技巧，大家可以仔细品一品")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("distributeCandies")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" candies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nextCandy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("candies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("candies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextCandy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nextCandy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            candies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            nextCandy"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("时间复杂度 O(N)，一个简单的while循环\n空间复杂度O(N)，因为建立了一个长度为len(num_people)的kids列表")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("数学方法\n主要思想：给小朋友们发n次糖，每次发n个，假设最后的倒霉孩子拿不到完整的n+1个，而是c个，显然可以对前n项进行等差数列求和，然后根据c的限制条件构建不等式方程组，再进行求解即可得到结果p，意为我们可以完整无缺地发p次糖果，解出p可以发推出c，最后进行遍历，注意一下那个倒霉孩子即可。\n注意，如果看不懂这个主要思想没关系，咱们来慢慢地捋一捋\n首先我们手上有一把糖，眼前有一群嗷嗷待哺的小朋友等着你发糖。暂时先不考虑小朋友的数量，那么根据题意我们可以假设，如果每个小朋友都很幸运地能拿到完整的糖果，这就说明我们要发n次，每次发n个糖。")])]),t._v(" "),n("p",[t._v("举个例子：我们手上有6个糖果，第1次发1个，第2次2个，第3次3个。这就很完美~")]),t._v(" "),n("p",[t._v("再看这个1,2,3,...,n的形式，可以联想到等差数列求和公式：")]),t._v(" "),n("p",[t._v("$$\n1 + 2 + 3 + ... + n = \\frac{n(n+1)}{2}\n$$")]),t._v(" "),n("p",[t._v("这个式子就能根据糖果的数量反推出n，即要发多少次糖。你可能会说，这是所有小朋友们都能拿到完整糖果的情况，没有考虑那个拿不到完整糖果的倒霉孩子。别急，咱们这里假设一个数值R作为最后那一份不完美糖果的数量。那么这个R存在如下性质：")]),t._v(" "),n("p",[t._v("$$\n0 \\leq R <n+1\n$$")]),t._v(" "),n("p",[t._v("这个式子就是说，最后这个倒霉孩子得到的糖果数量一定是大于等于0的，如果等于0，说明是完美无缺发给了所有小朋友。小于n+1是因为，如果R等于n+1的话，就使得完美的情况再次发生，即第n+1次发了n+1个糖。所以R必须是小于n+1的。")]),t._v(" "),n("p",[t._v("用C指代candies，所以我们手上总共的糖果数量可以写作：")]),t._v(" "),n("p",[t._v("$$\nC = \\frac{n(n+1)}{2} + R\n$$")]),t._v(" "),n("p",[t._v("这样，我们就可以对上面的不等式方程组进行推导：")]),t._v(" "),n("p",[t._v("$$\n0 \\leq C - \\frac{n(n+1)}{2} <n+1\n$$")]),t._v(" "),n("p",[t._v("写出这两个不等式方程组：")]),t._v(" "),n("p",[t._v("$$\n\\left{\n\\begin{array}{c}\n0 <= C-\\frac{n(n+1)}{2} \\\nC-\\frac{n(n+1)}{2} < n+1\n\\end{array}\n\\right.\n$$")]),t._v(" "),n("p",[t._v("对两个不等式方程组进行简化，两边乘以-2，再移项，合并同类项")]),t._v(" "),n("p",[t._v("$$\n\\left{\n\\begin{array}{l}\nn^2 + n - 2C \\leq 0 \\\nn^2 + 3n + 2 - 2C>0\n\\end{array}\n\\right.\n$$")]),t._v(" "),n("p",[t._v("到这里就很有意思了，相信大家都知道求根公式：")]),t._v(" "),n("p",[t._v("$$\nx_{1,2}=\\frac{-b \\pm \\sqrt{b^{2}-4 a c}}{2 a}\n$$")]),t._v(" "),n("p",[t._v("我们知道n代表了发多少次糖，这必然是一个大于0的数，所以我们可以求出第一个方程组的根：")]),t._v(" "),n("p",[t._v("$$\nn \\leq \\sqrt{2 C+\\frac{1}{4}}-\\frac{1}{2}\n$$")]),t._v(" "),n("p",[t._v("同理，基于n必须为大于0的数，第二个不等式方程的根为：")]),t._v(" "),n("p",[t._v("$$\nn > \\sqrt{2 C+\\frac{1}{4}}-\\frac{3}{2}\n$$")]),t._v(" "),n("p",[t._v("两个根进行合并之后就有：")]),t._v(" "),n("p",[t._v("$$\n\\sqrt{2 C+\\frac{1}{4}}-\\frac{3}{2}<n \\leq \\sqrt{2 C+\\frac{1}{4}}-\\frac{1}{2}\n$$")]),t._v(" "),n("p",[t._v("因为C代表candies，是给定的数，所我们可以把")]),t._v(" "),n("p",[t._v("$$\n\\sqrt{2 C+\\frac{1}{4}}\n$$")]),t._v(" "),n("p",[t._v("看做一个常数"),n("code",[t._v("Constant")])]),t._v(" "),n("p",[t._v("可以清晰地看到n的取值范围变成了：")]),t._v(" "),n("p",[t._v("$$\nConstant - 1.5<n \\leq Constant-0.5\n$$")]),t._v(" "),n("p",[t._v("这个范围的大小就是")]),t._v(" "),n("p",[t._v("$$\nConstant-0.5 - (Constant - 1.5) = 1\n$$")]),t._v(" "),n("p",[t._v("这就说明区间内只有一个整数，这个整数就是我们最终完美无缺分发糖果的次数，用p进行指代。这时p就等于区间的上界向下取整，一是因为上界是小于等于符号，二是因为向下取整不会出界，所以有：")]),t._v(" "),n("p",[n("code",[t._v("p = (Constant - 0.5)")]),t._v(", 向下取整")]),t._v(" "),n("p",[t._v("即")]),t._v(" "),n("p",[t._v("$$\np=\\text { floor }\\left(\\sqrt{2 C+\\frac{1}{4}}-\\frac{1}{2}\\right)\n$$")]),t._v(" "),n("p",[t._v("这里的"),n("code",[t._v("floor()")]),t._v("函数表示向下取整的意思，"),n("code",[t._v("python")]),t._v("里面可以用"),n("code",[t._v("int()")]),t._v("表示，如"),n("code",[t._v("int(1.8)")]),t._v("就等于1")]),t._v(" "),n("p",[t._v("那么用"),n("code",[t._v("python")]),t._v("写出这个代码的话就是：")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" candies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.25")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("“卧槽！这不就是之前那个代码么！”\n各位亲，惊不惊喜意不意外！")]),t._v(" "),n("p",[t._v("到这里，大家就可以去喝一杯卡布奇诺了，因为后面的过程就变得简单了起来~\n一杯卡布奇诺送给大家~")]),t._v(" "),n("p",[t._v("咖 啡 ♂ 时 间")]),t._v(" "),n("p",[t._v("喝完咖啡，我们再来看。显然，除了那个倒霉孩子以外，我们一共会进行p次完美地发糖果")]),t._v(" "),n("p",[t._v("对于剩余糖果数量R，根据式子")]),t._v(" "),n("p",[t._v("$$\nC=\\frac{n(n+1)}{2}+R\n$$\n把求得的p代入n中即可，代码就是：")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("R "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("candies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("到这里，我们可以假设小朋友有n个人，这就说明我们就要发"),n("code",[t._v("p/num_people")]),t._v("轮，用rows指代。细心的你可能会考虑到"),n("code",[t._v("p<n")]),t._v("时的情况，是不是需要对rows加个1呢?")]),t._v(" "),n("p",[t._v("我想说，别急，这里咱们歇一波，后面会有办法把这个情况处理好~")]),t._v(" "),n("p",[t._v("接着看，现在我们用rows指代要完美地发几轮糖果，kids代表包含所有小朋友的列表，那么我们可以算出，第i个小朋友(i从1开始)总共得到了多少糖果，算法如下：")]),t._v(" "),n("p",[t._v("$$\nkids[i]=i+(i+n)+(i+2n)+\\ldots(i+(\\text { rows }-1)* n)\n$$")]),t._v(" "),n("p",[t._v("举个例子，如果一共有3个小朋友，那么第1位小朋友总共得到的糖果数量就是：")]),t._v(" "),n("p",[t._v("$$\nkids[1]=1+(1+3)+(1+2*3)+\\ldots(i+(\\text { rows }-1) *3)\n$$")]),t._v(" "),n("p",[t._v("可以看出这个kids[i]的糖果数量又是一个等差数列求和，可以根据求和公式")]),t._v(" "),n("p",[t._v("$$\n\\begin{aligned} S_{n} &=\\frac{n}{2}\\left(a+a_{n}\\right) \\ &=\\frac{n}{2}[2 a+(n-1) d] \\ &=a n+d \\cdot \\frac{n(n-1)}{2} \\end{aligned}\n$$")]),t._v(" "),n("p",[t._v("公式里面的a就是kids中的第一项i，n在公式里面意味着有多少项，就是rows，d就是小朋友的人数n")]),t._v(" "),n("p",[t._v("所以就有：")]),t._v(" "),n("p",[t._v("$$\nd[i]=i \\times \\text { rows }+n \\frac{\\text { rows }(\\text { rows }-1)}{2}\n$$")]),t._v(" "),n("p",[t._v("这样我们就能算出每个小朋友的糖果数量啦~")]),t._v(" "),n("p",[t._v("等等，如果"),n("code",[t._v("p / num_people")]),t._v("中p < n会导致rows直接等于0，这咋整？")]),t._v(" "),n("p",[t._v("答案就是，我们可以用"),n("code",[t._v("cols = p % n")]),t._v("去专门负责只有一行的情况，以及最后一行的情况")]),t._v(" "),n("p",[t._v("显然cols是一个下标，指向最后那个没能拿到完美糖果数量的倒霉孩子，我们对于i < cols的孩子kids[i]，即倒霉孩子之前的幸运宝宝们，直接累加最后一轮的发放数量即可。对于倒霉孩子，剩下的都给他吧~")]),t._v(" "),n("p",[t._v("来，上代码：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("distributeCandies2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" candies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 套用上面推出来的公式，直接计算可以完整发放糖果的次数p")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" candies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.25")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继续套用公式，算出完整发放糖果以后剩余的糖果数量")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" remaining "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("candies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        迭代rows轮，cols是倒霉孩子的下标\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" rows "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cols "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// complete rows")]),t._v("\n            d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" rows "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rows "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rows "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后一轮or在p<n时的第一轮")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" cols"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" rows "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" num_people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后的那个倒霉孩子开心的拿到了R颗糖")]),t._v("\n        d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cols"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" remaining"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("时间复杂度")]),t._v(" "),n("p",[t._v("$$\nO(\\sqrt{Candies})\n$$\n注意性感coder的发糖速度是"),n("code",[t._v("rows * (rows - 1) * 0.5")]),t._v("哦\n空间复杂度"),n("code",[t._v("O(N)")]),t._v("，因为建立了一个长度为"),n("code",[t._v("len(num_people)")]),t._v("的kids列表")])])}],!1,null,null,null);s.default=p.exports}}]);